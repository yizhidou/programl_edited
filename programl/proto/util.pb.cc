// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: util.proto

#include "util.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace programl {
PROTOBUF_CONSTEXPR ProgramGraphList::ProgramGraphList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.graph_)*/{}
  , /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProgramGraphListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgramGraphListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgramGraphListDefaultTypeInternal() {}
  union {
    ProgramGraphList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgramGraphListDefaultTypeInternal _ProgramGraphList_default_instance_;
PROTOBUF_CONSTEXPR ProgramGraphOptions::ProgramGraphOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ir_path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.strict_)*/false
  , /*decltype(_impl_.instructions_only_)*/false
  , /*decltype(_impl_.ignore_call_returns_)*/false
  , /*decltype(_impl_.opt_level_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProgramGraphOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgramGraphOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgramGraphOptionsDefaultTypeInternal() {}
  union {
    ProgramGraphOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgramGraphOptionsDefaultTypeInternal _ProgramGraphOptions_default_instance_;
PROTOBUF_CONSTEXPR ProgramGraphFeatures::ProgramGraphFeatures(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.node_features_)*/nullptr
  , /*decltype(_impl_.edge_features_)*/nullptr
  , /*decltype(_impl_.function_features_)*/nullptr
  , /*decltype(_impl_.module_features_)*/nullptr
  , /*decltype(_impl_.features_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProgramGraphFeaturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgramGraphFeaturesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgramGraphFeaturesDefaultTypeInternal() {}
  union {
    ProgramGraphFeatures _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgramGraphFeaturesDefaultTypeInternal _ProgramGraphFeatures_default_instance_;
PROTOBUF_CONSTEXPR ProgramGraphFeaturesList::ProgramGraphFeaturesList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.graph_)*/{}
  , /*decltype(_impl_.context_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProgramGraphFeaturesListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProgramGraphFeaturesListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProgramGraphFeaturesListDefaultTypeInternal() {}
  union {
    ProgramGraphFeaturesList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProgramGraphFeaturesListDefaultTypeInternal _ProgramGraphFeaturesList_default_instance_;
PROTOBUF_CONSTEXPR Ir::Ir(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cmd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.compiler_version_)*/int64_t{0}
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IrDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrDefaultTypeInternal() {}
  union {
    Ir _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrDefaultTypeInternal _Ir_default_instance_;
PROTOBUF_CONSTEXPR IrList::IrList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ir_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IrListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IrListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IrListDefaultTypeInternal() {}
  union {
    IrList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IrListDefaultTypeInternal _IrList_default_instance_;
PROTOBUF_CONSTEXPR SourceFile::SourceFile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relpath_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.language_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SourceFileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SourceFileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SourceFileDefaultTypeInternal() {}
  union {
    SourceFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SourceFileDefaultTypeInternal _SourceFile_default_instance_;
PROTOBUF_CONSTEXPR Repo::Repo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sha1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_ms_timestamp_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RepoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RepoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RepoDefaultTypeInternal() {}
  union {
    Repo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RepoDefaultTypeInternal _Repo_default_instance_;
PROTOBUF_CONSTEXPR NodeIndexList::NodeIndexList(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.node_)*/{}
  , /*decltype(_impl_._node_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct NodeIndexListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeIndexListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeIndexListDefaultTypeInternal() {}
  union {
    NodeIndexList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeIndexListDefaultTypeInternal _NodeIndexList_default_instance_;
}  // namespace programl
static ::_pb::Metadata file_level_metadata_util_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_util_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_util_2eproto = nullptr;

const uint32_t TableStruct_util_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, _impl_.graph_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _impl_.strict_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _impl_.instructions_only_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _impl_.ignore_call_returns_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _impl_.opt_level_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _impl_.ir_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _impl_.node_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _impl_.edge_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _impl_.function_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _impl_.module_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _impl_.features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, _impl_.context_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, _impl_.graph_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _impl_.compiler_version_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _impl_.cmd_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::IrList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::IrList, _impl_.ir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, _impl_.language_),
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, _impl_.relpath_),
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, _impl_.text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::Repo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::Repo, _impl_.url_),
  PROTOBUF_FIELD_OFFSET(::programl::Repo, _impl_.sha1_),
  PROTOBUF_FIELD_OFFSET(::programl::Repo, _impl_.created_ms_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::NodeIndexList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::programl::NodeIndexList, _impl_.node_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::programl::ProgramGraphList)},
  { 8, -1, -1, sizeof(::programl::ProgramGraphOptions)},
  { 19, -1, -1, sizeof(::programl::ProgramGraphFeatures)},
  { 30, -1, -1, sizeof(::programl::ProgramGraphFeaturesList)},
  { 38, -1, -1, sizeof(::programl::Ir)},
  { 48, -1, -1, sizeof(::programl::IrList)},
  { 55, -1, -1, sizeof(::programl::SourceFile)},
  { 64, -1, -1, sizeof(::programl::Repo)},
  { 73, -1, -1, sizeof(::programl::NodeIndexList)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::programl::_ProgramGraphList_default_instance_._instance,
  &::programl::_ProgramGraphOptions_default_instance_._instance,
  &::programl::_ProgramGraphFeatures_default_instance_._instance,
  &::programl::_ProgramGraphFeaturesList_default_instance_._instance,
  &::programl::_Ir_default_instance_._instance,
  &::programl::_IrList_default_instance_._instance,
  &::programl::_SourceFile_default_instance_._instance,
  &::programl::_Repo_default_instance_._instance,
  &::programl::_NodeIndexList_default_instance_._instance,
};

const char descriptor_table_protodef_util_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nutil.proto\022\010programl\032\023program_graph.pr"
  "oto\032\016features.proto\"^\n\020ProgramGraphList\022"
  "#\n\007context\030\001 \001(\0132\022.programl.Features\022%\n\005"
  "graph\030\002 \003(\0132\026.programl.ProgramGraph\"\201\001\n\023"
  "ProgramGraphOptions\022\016\n\006strict\030\003 \001(\010\022\031\n\021i"
  "nstructions_only\030\001 \001(\010\022\033\n\023ignore_call_re"
  "turns\030\002 \001(\010\022\021\n\topt_level\030\004 \001(\005\022\017\n\007ir_pat"
  "h\030\n \001(\t\"\376\001\n\024ProgramGraphFeatures\022-\n\rnode"
  "_features\030\001 \001(\0132\026.programl.FeatureLists\022"
  "-\n\redge_features\030\002 \001(\0132\026.programl.Featur"
  "eLists\0221\n\021function_features\030\003 \001(\0132\026.prog"
  "raml.FeatureLists\022/\n\017module_features\030\004 \001"
  "(\0132\026.programl.FeatureLists\022$\n\010features\030\005"
  " \001(\0132\022.programl.Features\"n\n\030ProgramGraph"
  "FeaturesList\022#\n\007context\030\001 \001(\0132\022.programl"
  ".Features\022-\n\005graph\030\002 \003(\0132\036.programl.Prog"
  "ramGraphFeatures\"\206\001\n\002Ir\022\037\n\004type\030\001 \001(\0162\021."
  "programl.Ir.Type\022\030\n\020compiler_version\030\002 \001"
  "(\003\022\013\n\003cmd\030\003 \001(\t\022\014\n\004text\030\004 \001(\t\"*\n\004Type\022\013\n"
  "\007UNKNOWN\020\000\022\010\n\004LLVM\020\001\022\013\n\007XLA_HLO\020\002\"\"\n\006IrL"
  "ist\022\030\n\002ir\030\001 \003(\0132\014.programl.Ir\"\266\001\n\nSource"
  "File\022/\n\010language\030\002 \001(\0162\035.programl.Source"
  "File.Language\022\017\n\007relpath\030\001 \001(\t\022\014\n\004text\030\003"
  " \001(\t\"X\n\010Language\022\013\n\007UNKNOWN\020\000\022\005\n\001C\020\001\022\007\n\003"
  "CXX\020\002\022\n\n\006OPENCL\020\003\022\t\n\005SWIFT\020\004\022\013\n\007HASKELL\020"
  "\005\022\013\n\007FORTRAN\020\006\"\?\n\004Repo\022\013\n\003url\030\001 \001(\t\022\014\n\004s"
  "ha1\030\002 \001(\t\022\034\n\024created_ms_timestamp\030\003 \001(\003\""
  "\035\n\rNodeIndexList\022\014\n\004node\030\001 \003(\005B*\n\014com.pr"
  "ogramlB\tUtilProtoP\001Z\nprogramlpb\370\001\001b\006prot"
  "o3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_util_2eproto_deps[2] = {
  &::descriptor_table_features_2eproto,
  &::descriptor_table_program_5fgraph_2eproto,
};
static ::_pbi::once_flag descriptor_table_util_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_util_2eproto = {
    false, false, 1162, descriptor_table_protodef_util_2eproto,
    "util.proto",
    &descriptor_table_util_2eproto_once, descriptor_table_util_2eproto_deps, 2, 9,
    schemas, file_default_instances, TableStruct_util_2eproto::offsets,
    file_level_metadata_util_2eproto, file_level_enum_descriptors_util_2eproto,
    file_level_service_descriptors_util_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_util_2eproto_getter() {
  return &descriptor_table_util_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_util_2eproto(&descriptor_table_util_2eproto);
namespace programl {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ir_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_util_2eproto);
  return file_level_enum_descriptors_util_2eproto[0];
}
bool Ir_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Ir_Type Ir::UNKNOWN;
constexpr Ir_Type Ir::LLVM;
constexpr Ir_Type Ir::XLA_HLO;
constexpr Ir_Type Ir::Type_MIN;
constexpr Ir_Type Ir::Type_MAX;
constexpr int Ir::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SourceFile_Language_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_util_2eproto);
  return file_level_enum_descriptors_util_2eproto[1];
}
bool SourceFile_Language_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SourceFile_Language SourceFile::UNKNOWN;
constexpr SourceFile_Language SourceFile::C;
constexpr SourceFile_Language SourceFile::CXX;
constexpr SourceFile_Language SourceFile::OPENCL;
constexpr SourceFile_Language SourceFile::SWIFT;
constexpr SourceFile_Language SourceFile::HASKELL;
constexpr SourceFile_Language SourceFile::FORTRAN;
constexpr SourceFile_Language SourceFile::Language_MIN;
constexpr SourceFile_Language SourceFile::Language_MAX;
constexpr int SourceFile::Language_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class ProgramGraphList::_Internal {
 public:
  static const ::programl::Features& context(const ProgramGraphList* msg);
};

const ::programl::Features&
ProgramGraphList::_Internal::context(const ProgramGraphList* msg) {
  return *msg->_impl_.context_;
}
void ProgramGraphList::clear_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
}
void ProgramGraphList::clear_graph() {
  _impl_.graph_.Clear();
}
ProgramGraphList::ProgramGraphList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphList)
}
ProgramGraphList::ProgramGraphList(const ProgramGraphList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProgramGraphList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.graph_){from._impl_.graph_}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::programl::Features(*from._impl_.context_);
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphList)
}

inline void ProgramGraphList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.graph_){arena}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProgramGraphList::~ProgramGraphList() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProgramGraphList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.graph_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.context_;
}

void ProgramGraphList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProgramGraphList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.graph_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .programl.Features context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .programl.ProgramGraph graph = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_graph(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProgramGraphList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Features context = 1;
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  // repeated .programl.ProgramGraph graph = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_graph_size()); i < n; i++) {
    const auto& repfield = this->_internal_graph(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphList)
  return target;
}

size_t ProgramGraphList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.ProgramGraph graph = 2;
  total_size += 1UL * this->_internal_graph_size();
  for (const auto& msg : this->_impl_.graph_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .programl.Features context = 1;
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProgramGraphList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProgramGraphList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProgramGraphList::GetClassData() const { return &_class_data_; }


void ProgramGraphList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProgramGraphList*>(&to_msg);
  auto& from = static_cast<const ProgramGraphList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.graph_.MergeFrom(from._impl_.graph_);
  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::programl::Features::MergeFrom(
        from._internal_context());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProgramGraphList::CopyFrom(const ProgramGraphList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphList::IsInitialized() const {
  return true;
}

void ProgramGraphList::InternalSwap(ProgramGraphList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.graph_.InternalSwap(&other->_impl_.graph_);
  swap(_impl_.context_, other->_impl_.context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[0]);
}

// ===================================================================

class ProgramGraphOptions::_Internal {
 public:
};

ProgramGraphOptions::ProgramGraphOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphOptions)
}
ProgramGraphOptions::ProgramGraphOptions(const ProgramGraphOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProgramGraphOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ir_path_){}
    , decltype(_impl_.strict_){}
    , decltype(_impl_.instructions_only_){}
    , decltype(_impl_.ignore_call_returns_){}
    , decltype(_impl_.opt_level_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ir_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ir_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ir_path().empty()) {
    _this->_impl_.ir_path_.Set(from._internal_ir_path(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.strict_, &from._impl_.strict_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.opt_level_) -
    reinterpret_cast<char*>(&_impl_.strict_)) + sizeof(_impl_.opt_level_));
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphOptions)
}

inline void ProgramGraphOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ir_path_){}
    , decltype(_impl_.strict_){false}
    , decltype(_impl_.instructions_only_){false}
    , decltype(_impl_.ignore_call_returns_){false}
    , decltype(_impl_.opt_level_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ir_path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ir_path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProgramGraphOptions::~ProgramGraphOptions() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProgramGraphOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ir_path_.Destroy();
}

void ProgramGraphOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProgramGraphOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ir_path_.ClearToEmpty();
  ::memset(&_impl_.strict_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.opt_level_) -
      reinterpret_cast<char*>(&_impl_.strict_)) + sizeof(_impl_.opt_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool instructions_only = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.instructions_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ignore_call_returns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.ignore_call_returns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool strict = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strict_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 opt_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.opt_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ir_path = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_ir_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.ProgramGraphOptions.ir_path"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProgramGraphOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool instructions_only = 1;
  if (this->_internal_instructions_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_instructions_only(), target);
  }

  // bool ignore_call_returns = 2;
  if (this->_internal_ignore_call_returns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_ignore_call_returns(), target);
  }

  // bool strict = 3;
  if (this->_internal_strict() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_strict(), target);
  }

  // int32 opt_level = 4;
  if (this->_internal_opt_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_opt_level(), target);
  }

  // string ir_path = 10;
  if (!this->_internal_ir_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ir_path().data(), static_cast<int>(this->_internal_ir_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.ProgramGraphOptions.ir_path");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_ir_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphOptions)
  return target;
}

size_t ProgramGraphOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ir_path = 10;
  if (!this->_internal_ir_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ir_path());
  }

  // bool strict = 3;
  if (this->_internal_strict() != 0) {
    total_size += 1 + 1;
  }

  // bool instructions_only = 1;
  if (this->_internal_instructions_only() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore_call_returns = 2;
  if (this->_internal_ignore_call_returns() != 0) {
    total_size += 1 + 1;
  }

  // int32 opt_level = 4;
  if (this->_internal_opt_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_opt_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProgramGraphOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProgramGraphOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProgramGraphOptions::GetClassData() const { return &_class_data_; }


void ProgramGraphOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProgramGraphOptions*>(&to_msg);
  auto& from = static_cast<const ProgramGraphOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ir_path().empty()) {
    _this->_internal_set_ir_path(from._internal_ir_path());
  }
  if (from._internal_strict() != 0) {
    _this->_internal_set_strict(from._internal_strict());
  }
  if (from._internal_instructions_only() != 0) {
    _this->_internal_set_instructions_only(from._internal_instructions_only());
  }
  if (from._internal_ignore_call_returns() != 0) {
    _this->_internal_set_ignore_call_returns(from._internal_ignore_call_returns());
  }
  if (from._internal_opt_level() != 0) {
    _this->_internal_set_opt_level(from._internal_opt_level());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProgramGraphOptions::CopyFrom(const ProgramGraphOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphOptions::IsInitialized() const {
  return true;
}

void ProgramGraphOptions::InternalSwap(ProgramGraphOptions* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ir_path_, lhs_arena,
      &other->_impl_.ir_path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgramGraphOptions, _impl_.opt_level_)
      + sizeof(ProgramGraphOptions::_impl_.opt_level_)
      - PROTOBUF_FIELD_OFFSET(ProgramGraphOptions, _impl_.strict_)>(
          reinterpret_cast<char*>(&_impl_.strict_),
          reinterpret_cast<char*>(&other->_impl_.strict_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[1]);
}

// ===================================================================

class ProgramGraphFeatures::_Internal {
 public:
  static const ::programl::FeatureLists& node_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& edge_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& function_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& module_features(const ProgramGraphFeatures* msg);
  static const ::programl::Features& features(const ProgramGraphFeatures* msg);
};

const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::node_features(const ProgramGraphFeatures* msg) {
  return *msg->_impl_.node_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::edge_features(const ProgramGraphFeatures* msg) {
  return *msg->_impl_.edge_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::function_features(const ProgramGraphFeatures* msg) {
  return *msg->_impl_.function_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::module_features(const ProgramGraphFeatures* msg) {
  return *msg->_impl_.module_features_;
}
const ::programl::Features&
ProgramGraphFeatures::_Internal::features(const ProgramGraphFeatures* msg) {
  return *msg->_impl_.features_;
}
void ProgramGraphFeatures::clear_node_features() {
  if (GetArenaForAllocation() == nullptr && _impl_.node_features_ != nullptr) {
    delete _impl_.node_features_;
  }
  _impl_.node_features_ = nullptr;
}
void ProgramGraphFeatures::clear_edge_features() {
  if (GetArenaForAllocation() == nullptr && _impl_.edge_features_ != nullptr) {
    delete _impl_.edge_features_;
  }
  _impl_.edge_features_ = nullptr;
}
void ProgramGraphFeatures::clear_function_features() {
  if (GetArenaForAllocation() == nullptr && _impl_.function_features_ != nullptr) {
    delete _impl_.function_features_;
  }
  _impl_.function_features_ = nullptr;
}
void ProgramGraphFeatures::clear_module_features() {
  if (GetArenaForAllocation() == nullptr && _impl_.module_features_ != nullptr) {
    delete _impl_.module_features_;
  }
  _impl_.module_features_ = nullptr;
}
void ProgramGraphFeatures::clear_features() {
  if (GetArenaForAllocation() == nullptr && _impl_.features_ != nullptr) {
    delete _impl_.features_;
  }
  _impl_.features_ = nullptr;
}
ProgramGraphFeatures::ProgramGraphFeatures(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphFeatures)
}
ProgramGraphFeatures::ProgramGraphFeatures(const ProgramGraphFeatures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProgramGraphFeatures* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.node_features_){nullptr}
    , decltype(_impl_.edge_features_){nullptr}
    , decltype(_impl_.function_features_){nullptr}
    , decltype(_impl_.module_features_){nullptr}
    , decltype(_impl_.features_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_node_features()) {
    _this->_impl_.node_features_ = new ::programl::FeatureLists(*from._impl_.node_features_);
  }
  if (from._internal_has_edge_features()) {
    _this->_impl_.edge_features_ = new ::programl::FeatureLists(*from._impl_.edge_features_);
  }
  if (from._internal_has_function_features()) {
    _this->_impl_.function_features_ = new ::programl::FeatureLists(*from._impl_.function_features_);
  }
  if (from._internal_has_module_features()) {
    _this->_impl_.module_features_ = new ::programl::FeatureLists(*from._impl_.module_features_);
  }
  if (from._internal_has_features()) {
    _this->_impl_.features_ = new ::programl::Features(*from._impl_.features_);
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphFeatures)
}

inline void ProgramGraphFeatures::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.node_features_){nullptr}
    , decltype(_impl_.edge_features_){nullptr}
    , decltype(_impl_.function_features_){nullptr}
    , decltype(_impl_.module_features_){nullptr}
    , decltype(_impl_.features_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProgramGraphFeatures::~ProgramGraphFeatures() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphFeatures)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProgramGraphFeatures::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.node_features_;
  if (this != internal_default_instance()) delete _impl_.edge_features_;
  if (this != internal_default_instance()) delete _impl_.function_features_;
  if (this != internal_default_instance()) delete _impl_.module_features_;
  if (this != internal_default_instance()) delete _impl_.features_;
}

void ProgramGraphFeatures::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProgramGraphFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphFeatures)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.node_features_ != nullptr) {
    delete _impl_.node_features_;
  }
  _impl_.node_features_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.edge_features_ != nullptr) {
    delete _impl_.edge_features_;
  }
  _impl_.edge_features_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.function_features_ != nullptr) {
    delete _impl_.function_features_;
  }
  _impl_.function_features_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.module_features_ != nullptr) {
    delete _impl_.module_features_;
  }
  _impl_.module_features_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.features_ != nullptr) {
    delete _impl_.features_;
  }
  _impl_.features_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphFeatures::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .programl.FeatureLists node_features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .programl.FeatureLists edge_features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edge_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .programl.FeatureLists function_features = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .programl.FeatureLists module_features = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .programl.Features features = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_features(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProgramGraphFeatures::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphFeatures)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.FeatureLists node_features = 1;
  if (this->_internal_has_node_features()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::node_features(this),
        _Internal::node_features(this).GetCachedSize(), target, stream);
  }

  // .programl.FeatureLists edge_features = 2;
  if (this->_internal_has_edge_features()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::edge_features(this),
        _Internal::edge_features(this).GetCachedSize(), target, stream);
  }

  // .programl.FeatureLists function_features = 3;
  if (this->_internal_has_function_features()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::function_features(this),
        _Internal::function_features(this).GetCachedSize(), target, stream);
  }

  // .programl.FeatureLists module_features = 4;
  if (this->_internal_has_module_features()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::module_features(this),
        _Internal::module_features(this).GetCachedSize(), target, stream);
  }

  // .programl.Features features = 5;
  if (this->_internal_has_features()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::features(this),
        _Internal::features(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphFeatures)
  return target;
}

size_t ProgramGraphFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphFeatures)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .programl.FeatureLists node_features = 1;
  if (this->_internal_has_node_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.node_features_);
  }

  // .programl.FeatureLists edge_features = 2;
  if (this->_internal_has_edge_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.edge_features_);
  }

  // .programl.FeatureLists function_features = 3;
  if (this->_internal_has_function_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.function_features_);
  }

  // .programl.FeatureLists module_features = 4;
  if (this->_internal_has_module_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.module_features_);
  }

  // .programl.Features features = 5;
  if (this->_internal_has_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.features_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProgramGraphFeatures::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProgramGraphFeatures::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProgramGraphFeatures::GetClassData() const { return &_class_data_; }


void ProgramGraphFeatures::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProgramGraphFeatures*>(&to_msg);
  auto& from = static_cast<const ProgramGraphFeatures&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphFeatures)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_node_features()) {
    _this->_internal_mutable_node_features()->::programl::FeatureLists::MergeFrom(
        from._internal_node_features());
  }
  if (from._internal_has_edge_features()) {
    _this->_internal_mutable_edge_features()->::programl::FeatureLists::MergeFrom(
        from._internal_edge_features());
  }
  if (from._internal_has_function_features()) {
    _this->_internal_mutable_function_features()->::programl::FeatureLists::MergeFrom(
        from._internal_function_features());
  }
  if (from._internal_has_module_features()) {
    _this->_internal_mutable_module_features()->::programl::FeatureLists::MergeFrom(
        from._internal_module_features());
  }
  if (from._internal_has_features()) {
    _this->_internal_mutable_features()->::programl::Features::MergeFrom(
        from._internal_features());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProgramGraphFeatures::CopyFrom(const ProgramGraphFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphFeatures::IsInitialized() const {
  return true;
}

void ProgramGraphFeatures::InternalSwap(ProgramGraphFeatures* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgramGraphFeatures, _impl_.features_)
      + sizeof(ProgramGraphFeatures::_impl_.features_)
      - PROTOBUF_FIELD_OFFSET(ProgramGraphFeatures, _impl_.node_features_)>(
          reinterpret_cast<char*>(&_impl_.node_features_),
          reinterpret_cast<char*>(&other->_impl_.node_features_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphFeatures::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[2]);
}

// ===================================================================

class ProgramGraphFeaturesList::_Internal {
 public:
  static const ::programl::Features& context(const ProgramGraphFeaturesList* msg);
};

const ::programl::Features&
ProgramGraphFeaturesList::_Internal::context(const ProgramGraphFeaturesList* msg) {
  return *msg->_impl_.context_;
}
void ProgramGraphFeaturesList::clear_context() {
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
}
ProgramGraphFeaturesList::ProgramGraphFeaturesList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphFeaturesList)
}
ProgramGraphFeaturesList::ProgramGraphFeaturesList(const ProgramGraphFeaturesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProgramGraphFeaturesList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.graph_){from._impl_.graph_}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    _this->_impl_.context_ = new ::programl::Features(*from._impl_.context_);
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphFeaturesList)
}

inline void ProgramGraphFeaturesList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.graph_){arena}
    , decltype(_impl_.context_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProgramGraphFeaturesList::~ProgramGraphFeaturesList() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphFeaturesList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProgramGraphFeaturesList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.graph_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.context_;
}

void ProgramGraphFeaturesList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProgramGraphFeaturesList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphFeaturesList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.graph_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.context_ != nullptr) {
    delete _impl_.context_;
  }
  _impl_.context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphFeaturesList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .programl.Features context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .programl.ProgramGraphFeatures graph = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_graph(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProgramGraphFeaturesList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphFeaturesList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Features context = 1;
  if (this->_internal_has_context()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::context(this),
        _Internal::context(this).GetCachedSize(), target, stream);
  }

  // repeated .programl.ProgramGraphFeatures graph = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_graph_size()); i < n; i++) {
    const auto& repfield = this->_internal_graph(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphFeaturesList)
  return target;
}

size_t ProgramGraphFeaturesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphFeaturesList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.ProgramGraphFeatures graph = 2;
  total_size += 1UL * this->_internal_graph_size();
  for (const auto& msg : this->_impl_.graph_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .programl.Features context = 1;
  if (this->_internal_has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.context_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProgramGraphFeaturesList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProgramGraphFeaturesList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProgramGraphFeaturesList::GetClassData() const { return &_class_data_; }


void ProgramGraphFeaturesList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProgramGraphFeaturesList*>(&to_msg);
  auto& from = static_cast<const ProgramGraphFeaturesList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphFeaturesList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.graph_.MergeFrom(from._impl_.graph_);
  if (from._internal_has_context()) {
    _this->_internal_mutable_context()->::programl::Features::MergeFrom(
        from._internal_context());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProgramGraphFeaturesList::CopyFrom(const ProgramGraphFeaturesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphFeaturesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphFeaturesList::IsInitialized() const {
  return true;
}

void ProgramGraphFeaturesList::InternalSwap(ProgramGraphFeaturesList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.graph_.InternalSwap(&other->_impl_.graph_);
  swap(_impl_.context_, other->_impl_.context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphFeaturesList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[3]);
}

// ===================================================================

class Ir::_Internal {
 public:
};

Ir::Ir(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.Ir)
}
Ir::Ir(const Ir& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Ir* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.compiler_version_){}
    , decltype(_impl_.type_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cmd().empty()) {
    _this->_impl_.cmd_.Set(from._internal_cmd(), 
      _this->GetArenaForAllocation());
  }
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.compiler_version_, &from._impl_.compiler_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.compiler_version_)) + sizeof(_impl_.type_));
  // @@protoc_insertion_point(copy_constructor:programl.Ir)
}

inline void Ir::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.compiler_version_){int64_t{0}}
    , decltype(_impl_.type_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.cmd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cmd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Ir::~Ir() {
  // @@protoc_insertion_point(destructor:programl.Ir)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Ir::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cmd_.Destroy();
  _impl_.text_.Destroy();
}

void Ir::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Ir::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.Ir)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cmd_.ClearToEmpty();
  _impl_.text_.ClearToEmpty();
  ::memset(&_impl_.compiler_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.compiler_version_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ir::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .programl.Ir.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::programl::Ir_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // int64 compiler_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.compiler_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cmd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cmd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.Ir.cmd"));
        } else
          goto handle_unusual;
        continue;
      // string text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.Ir.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Ir::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.Ir)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Ir.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int64 compiler_version = 2;
  if (this->_internal_compiler_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_compiler_version(), target);
  }

  // string cmd = 3;
  if (!this->_internal_cmd().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd().data(), static_cast<int>(this->_internal_cmd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Ir.cmd");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cmd(), target);
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Ir.text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.Ir)
  return target;
}

size_t Ir::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.Ir)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmd = 3;
  if (!this->_internal_cmd().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cmd());
  }

  // string text = 4;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int64 compiler_version = 2;
  if (this->_internal_compiler_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_compiler_version());
  }

  // .programl.Ir.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Ir::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Ir::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Ir::GetClassData() const { return &_class_data_; }


void Ir::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Ir*>(&to_msg);
  auto& from = static_cast<const Ir&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.Ir)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_cmd().empty()) {
    _this->_internal_set_cmd(from._internal_cmd());
  }
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_compiler_version() != 0) {
    _this->_internal_set_compiler_version(from._internal_compiler_version());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Ir::CopyFrom(const Ir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.Ir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ir::IsInitialized() const {
  return true;
}

void Ir::InternalSwap(Ir* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cmd_, lhs_arena,
      &other->_impl_.cmd_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ir, _impl_.type_)
      + sizeof(Ir::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Ir, _impl_.compiler_version_)>(
          reinterpret_cast<char*>(&_impl_.compiler_version_),
          reinterpret_cast<char*>(&other->_impl_.compiler_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ir::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[4]);
}

// ===================================================================

class IrList::_Internal {
 public:
};

IrList::IrList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.IrList)
}
IrList::IrList(const IrList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IrList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ir_){from._impl_.ir_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:programl.IrList)
}

inline void IrList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ir_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IrList::~IrList() {
  // @@protoc_insertion_point(destructor:programl.IrList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IrList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ir_.~RepeatedPtrField();
}

void IrList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IrList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.IrList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ir_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .programl.Ir ir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ir(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IrList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.IrList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .programl.Ir ir = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ir_size()); i < n; i++) {
    const auto& repfield = this->_internal_ir(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.IrList)
  return target;
}

size_t IrList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.IrList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.Ir ir = 1;
  total_size += 1UL * this->_internal_ir_size();
  for (const auto& msg : this->_impl_.ir_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IrList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IrList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IrList::GetClassData() const { return &_class_data_; }


void IrList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IrList*>(&to_msg);
  auto& from = static_cast<const IrList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.IrList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.ir_.MergeFrom(from._impl_.ir_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IrList::CopyFrom(const IrList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.IrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrList::IsInitialized() const {
  return true;
}

void IrList::InternalSwap(IrList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ir_.InternalSwap(&other->_impl_.ir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IrList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[5]);
}

// ===================================================================

class SourceFile::_Internal {
 public:
};

SourceFile::SourceFile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.SourceFile)
}
SourceFile::SourceFile(const SourceFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SourceFile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relpath_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.language_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.relpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_relpath().empty()) {
    _this->_impl_.relpath_.Set(from._internal_relpath(), 
      _this->GetArenaForAllocation());
  }
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.language_ = from._impl_.language_;
  // @@protoc_insertion_point(copy_constructor:programl.SourceFile)
}

inline void SourceFile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relpath_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.language_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.relpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.relpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SourceFile::~SourceFile() {
  // @@protoc_insertion_point(destructor:programl.SourceFile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SourceFile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.relpath_.Destroy();
  _impl_.text_.Destroy();
}

void SourceFile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SourceFile::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.SourceFile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relpath_.ClearToEmpty();
  _impl_.text_.ClearToEmpty();
  _impl_.language_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceFile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string relpath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_relpath();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.SourceFile.relpath"));
        } else
          goto handle_unusual;
        continue;
      // .programl.SourceFile.Language language = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_language(static_cast<::programl::SourceFile_Language>(val));
        } else
          goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.SourceFile.text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SourceFile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.SourceFile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string relpath = 1;
  if (!this->_internal_relpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_relpath().data(), static_cast<int>(this->_internal_relpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.SourceFile.relpath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_relpath(), target);
  }

  // .programl.SourceFile.Language language = 2;
  if (this->_internal_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_language(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.SourceFile.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.SourceFile)
  return target;
}

size_t SourceFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.SourceFile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string relpath = 1;
  if (!this->_internal_relpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_relpath());
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .programl.SourceFile.Language language = 2;
  if (this->_internal_language() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SourceFile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SourceFile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SourceFile::GetClassData() const { return &_class_data_; }


void SourceFile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SourceFile*>(&to_msg);
  auto& from = static_cast<const SourceFile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.SourceFile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_relpath().empty()) {
    _this->_internal_set_relpath(from._internal_relpath());
  }
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SourceFile::CopyFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceFile::IsInitialized() const {
  return true;
}

void SourceFile::InternalSwap(SourceFile* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.relpath_, lhs_arena,
      &other->_impl_.relpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  swap(_impl_.language_, other->_impl_.language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceFile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[6]);
}

// ===================================================================

class Repo::_Internal {
 public:
};

Repo::Repo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.Repo)
}
Repo::Repo(const Repo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Repo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.sha1_){}
    , decltype(_impl_.created_ms_timestamp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sha1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sha1().empty()) {
    _this->_impl_.sha1_.Set(from._internal_sha1(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.created_ms_timestamp_ = from._impl_.created_ms_timestamp_;
  // @@protoc_insertion_point(copy_constructor:programl.Repo)
}

inline void Repo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , decltype(_impl_.sha1_){}
    , decltype(_impl_.created_ms_timestamp_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sha1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sha1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Repo::~Repo() {
  // @@protoc_insertion_point(destructor:programl.Repo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Repo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
  _impl_.sha1_.Destroy();
}

void Repo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Repo::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.Repo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.sha1_.ClearToEmpty();
  _impl_.created_ms_timestamp_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Repo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.Repo.url"));
        } else
          goto handle_unusual;
        continue;
      // string sha1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_sha1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "programl.Repo.sha1"));
        } else
          goto handle_unusual;
        continue;
      // int64 created_ms_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.created_ms_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Repo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.Repo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Repo.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // string sha1 = 2;
  if (!this->_internal_sha1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha1().data(), static_cast<int>(this->_internal_sha1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Repo.sha1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sha1(), target);
  }

  // int64 created_ms_timestamp = 3;
  if (this->_internal_created_ms_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_created_ms_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.Repo)
  return target;
}

size_t Repo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.Repo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string sha1 = 2;
  if (!this->_internal_sha1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha1());
  }

  // int64 created_ms_timestamp = 3;
  if (this->_internal_created_ms_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_created_ms_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Repo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Repo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Repo::GetClassData() const { return &_class_data_; }


void Repo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Repo*>(&to_msg);
  auto& from = static_cast<const Repo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.Repo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_sha1().empty()) {
    _this->_internal_set_sha1(from._internal_sha1());
  }
  if (from._internal_created_ms_timestamp() != 0) {
    _this->_internal_set_created_ms_timestamp(from._internal_created_ms_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Repo::CopyFrom(const Repo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.Repo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Repo::IsInitialized() const {
  return true;
}

void Repo::InternalSwap(Repo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sha1_, lhs_arena,
      &other->_impl_.sha1_, rhs_arena
  );
  swap(_impl_.created_ms_timestamp_, other->_impl_.created_ms_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Repo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[7]);
}

// ===================================================================

class NodeIndexList::_Internal {
 public:
};

NodeIndexList::NodeIndexList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:programl.NodeIndexList)
}
NodeIndexList::NodeIndexList(const NodeIndexList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  NodeIndexList* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.node_){from._impl_.node_}
    , /*decltype(_impl_._node_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:programl.NodeIndexList)
}

inline void NodeIndexList::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.node_){arena}
    , /*decltype(_impl_._node_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

NodeIndexList::~NodeIndexList() {
  // @@protoc_insertion_point(destructor:programl.NodeIndexList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void NodeIndexList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.node_.~RepeatedField();
}

void NodeIndexList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void NodeIndexList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.NodeIndexList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeIndexList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_node(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_node(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NodeIndexList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.NodeIndexList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 node = 1;
  {
    int byte_size = _impl_._node_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_node(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.NodeIndexList)
  return target;
}

size_t NodeIndexList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.NodeIndexList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 node = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.node_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._node_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NodeIndexList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    NodeIndexList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NodeIndexList::GetClassData() const { return &_class_data_; }


void NodeIndexList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<NodeIndexList*>(&to_msg);
  auto& from = static_cast<const NodeIndexList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:programl.NodeIndexList)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.node_.MergeFrom(from._impl_.node_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NodeIndexList::CopyFrom(const NodeIndexList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.NodeIndexList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeIndexList::IsInitialized() const {
  return true;
}

void NodeIndexList::InternalSwap(NodeIndexList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeIndexList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_util_2eproto_getter, &descriptor_table_util_2eproto_once,
      file_level_metadata_util_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace programl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphList*
Arena::CreateMaybeMessage< ::programl::ProgramGraphList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphOptions*
Arena::CreateMaybeMessage< ::programl::ProgramGraphOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphFeatures*
Arena::CreateMaybeMessage< ::programl::ProgramGraphFeatures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphFeaturesList*
Arena::CreateMaybeMessage< ::programl::ProgramGraphFeaturesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphFeaturesList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::Ir*
Arena::CreateMaybeMessage< ::programl::Ir >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::Ir >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::IrList*
Arena::CreateMaybeMessage< ::programl::IrList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::IrList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::SourceFile*
Arena::CreateMaybeMessage< ::programl::SourceFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::SourceFile >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::Repo*
Arena::CreateMaybeMessage< ::programl::Repo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::Repo >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::NodeIndexList*
Arena::CreateMaybeMessage< ::programl::NodeIndexList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::NodeIndexList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
