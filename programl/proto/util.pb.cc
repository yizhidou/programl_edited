// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: util.proto

#include "util.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_features_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FeatureLists_features_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_features_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Features_features_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_features_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Int64List_features_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_util_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ir_util_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_program_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ProgramGraph_program_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_util_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgramGraphFeatures_util_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_util_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultOneIteration_util_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_util_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto;
namespace programl {
class ProgramGraphListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProgramGraphList> _instance;
} _ProgramGraphList_default_instance_;
class ProgramGraphOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProgramGraphOptions> _instance;
} _ProgramGraphOptions_default_instance_;
class ProgramGraphFeaturesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProgramGraphFeatures> _instance;
} _ProgramGraphFeatures_default_instance_;
class ProgramGraphFeaturesListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProgramGraphFeaturesList> _instance;
} _ProgramGraphFeaturesList_default_instance_;
class IrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ir> _instance;
} _Ir_default_instance_;
class IrListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IrList> _instance;
} _IrList_default_instance_;
class SourceFileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceFile> _instance;
} _SourceFile_default_instance_;
class RepoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Repo> _instance;
} _Repo_default_instance_;
class NodeIndexListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NodeIndexList> _instance;
} _NodeIndexList_default_instance_;
class ResultsEveryIterationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultsEveryIteration> _instance;
} _ResultsEveryIteration_default_instance_;
class ResultOneIteration_ResultMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultOneIteration_ResultMapEntry_DoNotUse> _instance;
} _ResultOneIteration_ResultMapEntry_DoNotUse_default_instance_;
class ResultOneIterationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResultOneIteration> _instance;
} _ResultOneIteration_default_instance_;
}  // namespace programl
static void InitDefaultsscc_info_Ir_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_Ir_default_instance_;
    new (ptr) ::programl::Ir();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::Ir::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ir_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ir_util_2eproto}, {}};

static void InitDefaultsscc_info_IrList_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_IrList_default_instance_;
    new (ptr) ::programl::IrList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::IrList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IrList_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IrList_util_2eproto}, {
      &scc_info_Ir_util_2eproto.base,}};

static void InitDefaultsscc_info_NodeIndexList_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_NodeIndexList_default_instance_;
    new (ptr) ::programl::NodeIndexList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::NodeIndexList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeIndexList_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NodeIndexList_util_2eproto}, {}};

static void InitDefaultsscc_info_ProgramGraphFeatures_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ProgramGraphFeatures_default_instance_;
    new (ptr) ::programl::ProgramGraphFeatures();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ProgramGraphFeatures::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgramGraphFeatures_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProgramGraphFeatures_util_2eproto}, {
      &scc_info_FeatureLists_features_2eproto.base,
      &scc_info_Features_features_2eproto.base,}};

static void InitDefaultsscc_info_ProgramGraphFeaturesList_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ProgramGraphFeaturesList_default_instance_;
    new (ptr) ::programl::ProgramGraphFeaturesList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ProgramGraphFeaturesList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgramGraphFeaturesList_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProgramGraphFeaturesList_util_2eproto}, {
      &scc_info_Features_features_2eproto.base,
      &scc_info_ProgramGraphFeatures_util_2eproto.base,}};

static void InitDefaultsscc_info_ProgramGraphList_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ProgramGraphList_default_instance_;
    new (ptr) ::programl::ProgramGraphList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ProgramGraphList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProgramGraphList_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProgramGraphList_util_2eproto}, {
      &scc_info_Features_features_2eproto.base,
      &scc_info_ProgramGraph_program_5fgraph_2eproto.base,}};

static void InitDefaultsscc_info_ProgramGraphOptions_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ProgramGraphOptions_default_instance_;
    new (ptr) ::programl::ProgramGraphOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ProgramGraphOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProgramGraphOptions_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProgramGraphOptions_util_2eproto}, {}};

static void InitDefaultsscc_info_Repo_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_Repo_default_instance_;
    new (ptr) ::programl::Repo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::Repo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Repo_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Repo_util_2eproto}, {}};

static void InitDefaultsscc_info_ResultOneIteration_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ResultOneIteration_default_instance_;
    new (ptr) ::programl::ResultOneIteration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ResultOneIteration::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultOneIteration_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResultOneIteration_util_2eproto}, {
      &scc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto.base,}};

static void InitDefaultsscc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ResultOneIteration_ResultMapEntry_DoNotUse_default_instance_;
    new (ptr) ::programl::ResultOneIteration_ResultMapEntry_DoNotUse();
  }
  ::programl::ResultOneIteration_ResultMapEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto}, {
      &scc_info_Int64List_features_2eproto.base,}};

static void InitDefaultsscc_info_ResultsEveryIteration_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_ResultsEveryIteration_default_instance_;
    new (ptr) ::programl::ResultsEveryIteration();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::ResultsEveryIteration::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ResultsEveryIteration_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ResultsEveryIteration_util_2eproto}, {
      &scc_info_ResultOneIteration_util_2eproto.base,
      &scc_info_Int64List_features_2eproto.base,}};

static void InitDefaultsscc_info_SourceFile_util_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::programl::_SourceFile_default_instance_;
    new (ptr) ::programl::SourceFile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::programl::SourceFile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceFile_util_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceFile_util_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_util_2eproto[12];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_util_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_util_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_util_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, context_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphList, graph_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, strict_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, instructions_only_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, ignore_call_returns_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, opt_level_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphOptions, ir_path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, node_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, edge_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, function_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, module_features_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeatures, features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, context_),
  PROTOBUF_FIELD_OFFSET(::programl::ProgramGraphFeaturesList, graph_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::Ir, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::Ir, type_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, compiler_version_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, cmd_),
  PROTOBUF_FIELD_OFFSET(::programl::Ir, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::IrList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::IrList, ir_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, language_),
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, relpath_),
  PROTOBUF_FIELD_OFFSET(::programl::SourceFile, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::Repo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::Repo, url_),
  PROTOBUF_FIELD_OFFSET(::programl::Repo, sha1_),
  PROTOBUF_FIELD_OFFSET(::programl::Repo, created_ms_timestamp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::NodeIndexList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::NodeIndexList, node_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, results_every_iteration_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, program_points_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, interested_points_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultsEveryIteration, task_name_),
  ~0u,
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration_ResultMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration_ResultMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration_ResultMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration_ResultMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::programl::ResultOneIteration, result_map_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::programl::ProgramGraphList)},
  { 7, -1, sizeof(::programl::ProgramGraphOptions)},
  { 17, -1, sizeof(::programl::ProgramGraphFeatures)},
  { 27, -1, sizeof(::programl::ProgramGraphFeaturesList)},
  { 34, -1, sizeof(::programl::Ir)},
  { 43, -1, sizeof(::programl::IrList)},
  { 49, -1, sizeof(::programl::SourceFile)},
  { 57, -1, sizeof(::programl::Repo)},
  { 65, -1, sizeof(::programl::NodeIndexList)},
  { 71, 80, sizeof(::programl::ResultsEveryIteration)},
  { 84, 91, sizeof(::programl::ResultOneIteration_ResultMapEntry_DoNotUse)},
  { 93, -1, sizeof(::programl::ResultOneIteration)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ProgramGraphList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ProgramGraphOptions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ProgramGraphFeatures_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ProgramGraphFeaturesList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_Ir_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_IrList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_SourceFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_Repo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_NodeIndexList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ResultsEveryIteration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ResultOneIteration_ResultMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::programl::_ResultOneIteration_default_instance_),
};

const char descriptor_table_protodef_util_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nutil.proto\022\010programl\032\023program_graph.pr"
  "oto\032\016features.proto\"^\n\020ProgramGraphList\022"
  "#\n\007context\030\001 \001(\0132\022.programl.Features\022%\n\005"
  "graph\030\002 \003(\0132\026.programl.ProgramGraph\"\201\001\n\023"
  "ProgramGraphOptions\022\016\n\006strict\030\003 \001(\010\022\031\n\021i"
  "nstructions_only\030\001 \001(\010\022\033\n\023ignore_call_re"
  "turns\030\002 \001(\010\022\021\n\topt_level\030\004 \001(\005\022\017\n\007ir_pat"
  "h\030\n \001(\t\"\376\001\n\024ProgramGraphFeatures\022-\n\rnode"
  "_features\030\001 \001(\0132\026.programl.FeatureLists\022"
  "-\n\redge_features\030\002 \001(\0132\026.programl.Featur"
  "eLists\0221\n\021function_features\030\003 \001(\0132\026.prog"
  "raml.FeatureLists\022/\n\017module_features\030\004 \001"
  "(\0132\026.programl.FeatureLists\022$\n\010features\030\005"
  " \001(\0132\022.programl.Features\"n\n\030ProgramGraph"
  "FeaturesList\022#\n\007context\030\001 \001(\0132\022.programl"
  ".Features\022-\n\005graph\030\002 \003(\0132\036.programl.Prog"
  "ramGraphFeatures\"\206\001\n\002Ir\022\037\n\004type\030\001 \001(\0162\021."
  "programl.Ir.Type\022\030\n\020compiler_version\030\002 \001"
  "(\003\022\013\n\003cmd\030\003 \001(\t\022\014\n\004text\030\004 \001(\t\"*\n\004Type\022\013\n"
  "\007UNKNOWN\020\000\022\010\n\004LLVM\020\001\022\013\n\007XLA_HLO\020\002\"\"\n\006IrL"
  "ist\022\030\n\002ir\030\001 \003(\0132\014.programl.Ir\"\266\001\n\nSource"
  "File\022/\n\010language\030\002 \001(\0162\035.programl.Source"
  "File.Language\022\017\n\007relpath\030\001 \001(\t\022\014\n\004text\030\003"
  " \001(\t\"X\n\010Language\022\013\n\007UNKNOWN\020\000\022\005\n\001C\020\001\022\007\n\003"
  "CXX\020\002\022\n\n\006OPENCL\020\003\022\t\n\005SWIFT\020\004\022\013\n\007HASKELL\020"
  "\005\022\013\n\007FORTRAN\020\006\"\?\n\004Repo\022\013\n\003url\030\001 \001(\t\022\014\n\004s"
  "ha1\030\002 \001(\t\022\034\n\024created_ms_timestamp\030\003 \001(\003\""
  "\035\n\rNodeIndexList\022\014\n\004node\030\001 \003(\005\"\214\002\n\025Resul"
  "tsEveryIteration\022=\n\027results_every_iterat"
  "ion\030\001 \003(\0132\034.programl.ResultOneIteration\022"
  "0\n\016program_points\030\002 \001(\0132\023.programl.Int64"
  "ListH\000\210\001\001\0223\n\021interested_points\030\003 \001(\0132\023.p"
  "rograml.Int64ListH\001\210\001\001\022\026\n\ttask_name\030\004 \001("
  "\tH\002\210\001\001B\021\n\017_program_pointsB\024\n\022_interested"
  "_pointsB\014\n\n_task_name\"\234\001\n\022ResultOneItera"
  "tion\022\?\n\nresult_map\030\001 \003(\0132+.programl.Resu"
  "ltOneIteration.ResultMapEntry\032E\n\016ResultM"
  "apEntry\022\013\n\003key\030\001 \001(\003\022\"\n\005value\030\002 \001(\0132\023.pr"
  "ograml.Int64List:\0028\001B*\n\014com.programlB\tUt"
  "ilProtoP\001Z\nprogramlpb\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_util_2eproto_deps[2] = {
  &::descriptor_table_features_2eproto,
  &::descriptor_table_program_5fgraph_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_util_2eproto_sccs[12] = {
  &scc_info_Ir_util_2eproto.base,
  &scc_info_IrList_util_2eproto.base,
  &scc_info_NodeIndexList_util_2eproto.base,
  &scc_info_ProgramGraphFeatures_util_2eproto.base,
  &scc_info_ProgramGraphFeaturesList_util_2eproto.base,
  &scc_info_ProgramGraphList_util_2eproto.base,
  &scc_info_ProgramGraphOptions_util_2eproto.base,
  &scc_info_Repo_util_2eproto.base,
  &scc_info_ResultOneIteration_util_2eproto.base,
  &scc_info_ResultOneIteration_ResultMapEntry_DoNotUse_util_2eproto.base,
  &scc_info_ResultsEveryIteration_util_2eproto.base,
  &scc_info_SourceFile_util_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_util_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_util_2eproto = {
  false, false, descriptor_table_protodef_util_2eproto, "util.proto", 1592,
  &descriptor_table_util_2eproto_once, descriptor_table_util_2eproto_sccs, descriptor_table_util_2eproto_deps, 12, 2,
  schemas, file_default_instances, TableStruct_util_2eproto::offsets,
  file_level_metadata_util_2eproto, 12, file_level_enum_descriptors_util_2eproto, file_level_service_descriptors_util_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_util_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_util_2eproto)), true);
namespace programl {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ir_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_util_2eproto);
  return file_level_enum_descriptors_util_2eproto[0];
}
bool Ir_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ir_Type Ir::UNKNOWN;
constexpr Ir_Type Ir::LLVM;
constexpr Ir_Type Ir::XLA_HLO;
constexpr Ir_Type Ir::Type_MIN;
constexpr Ir_Type Ir::Type_MAX;
constexpr int Ir::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SourceFile_Language_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_util_2eproto);
  return file_level_enum_descriptors_util_2eproto[1];
}
bool SourceFile_Language_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr SourceFile_Language SourceFile::UNKNOWN;
constexpr SourceFile_Language SourceFile::C;
constexpr SourceFile_Language SourceFile::CXX;
constexpr SourceFile_Language SourceFile::OPENCL;
constexpr SourceFile_Language SourceFile::SWIFT;
constexpr SourceFile_Language SourceFile::HASKELL;
constexpr SourceFile_Language SourceFile::FORTRAN;
constexpr SourceFile_Language SourceFile::Language_MIN;
constexpr SourceFile_Language SourceFile::Language_MAX;
constexpr int SourceFile::Language_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ProgramGraphList::InitAsDefaultInstance() {
  ::programl::_ProgramGraphList_default_instance_._instance.get_mutable()->context_ = const_cast< ::programl::Features*>(
      ::programl::Features::internal_default_instance());
}
class ProgramGraphList::_Internal {
 public:
  static const ::programl::Features& context(const ProgramGraphList* msg);
};

const ::programl::Features&
ProgramGraphList::_Internal::context(const ProgramGraphList* msg) {
  return *msg->context_;
}
void ProgramGraphList::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
void ProgramGraphList::clear_graph() {
  graph_.Clear();
}
ProgramGraphList::ProgramGraphList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  graph_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphList)
}
ProgramGraphList::ProgramGraphList(const ProgramGraphList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      graph_(from.graph_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    context_ = new ::programl::Features(*from.context_);
  } else {
    context_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphList)
}

void ProgramGraphList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProgramGraphList_util_2eproto.base);
  context_ = nullptr;
}

ProgramGraphList::~ProgramGraphList() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProgramGraphList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete context_;
}

void ProgramGraphList::ArenaDtor(void* object) {
  ProgramGraphList* _this = reinterpret_cast< ProgramGraphList* >(object);
  (void)_this;
}
void ProgramGraphList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProgramGraphList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProgramGraphList& ProgramGraphList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProgramGraphList_util_2eproto.base);
  return *internal_default_instance();
}


void ProgramGraphList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_.Clear();
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .programl.Features context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .programl.ProgramGraph graph = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_graph(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProgramGraphList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Features context = 1;
  if (this->has_context()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::context(this), target, stream);
  }

  // repeated .programl.ProgramGraph graph = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_graph_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_graph(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphList)
  return target;
}

size_t ProgramGraphList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.ProgramGraph graph = 2;
  total_size += 1UL * this->_internal_graph_size();
  for (const auto& msg : this->graph_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .programl.Features context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *context_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramGraphList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ProgramGraphList)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramGraphList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProgramGraphList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ProgramGraphList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ProgramGraphList)
    MergeFrom(*source);
  }
}

void ProgramGraphList::MergeFrom(const ProgramGraphList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  graph_.MergeFrom(from.graph_);
  if (from.has_context()) {
    _internal_mutable_context()->::programl::Features::MergeFrom(from._internal_context());
  }
}

void ProgramGraphList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ProgramGraphList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramGraphList::CopyFrom(const ProgramGraphList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphList::IsInitialized() const {
  return true;
}

void ProgramGraphList::InternalSwap(ProgramGraphList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  graph_.InternalSwap(&other->graph_);
  swap(context_, other->context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProgramGraphOptions::InitAsDefaultInstance() {
}
class ProgramGraphOptions::_Internal {
 public:
};

ProgramGraphOptions::ProgramGraphOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphOptions)
}
ProgramGraphOptions::ProgramGraphOptions(const ProgramGraphOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ir_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ir_path().empty()) {
    ir_path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ir_path(),
      GetArena());
  }
  ::memcpy(&strict_, &from.strict_,
    static_cast<size_t>(reinterpret_cast<char*>(&opt_level_) -
    reinterpret_cast<char*>(&strict_)) + sizeof(opt_level_));
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphOptions)
}

void ProgramGraphOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProgramGraphOptions_util_2eproto.base);
  ir_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&strict_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opt_level_) -
      reinterpret_cast<char*>(&strict_)) + sizeof(opt_level_));
}

ProgramGraphOptions::~ProgramGraphOptions() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProgramGraphOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ir_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProgramGraphOptions::ArenaDtor(void* object) {
  ProgramGraphOptions* _this = reinterpret_cast< ProgramGraphOptions* >(object);
  (void)_this;
}
void ProgramGraphOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProgramGraphOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProgramGraphOptions& ProgramGraphOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProgramGraphOptions_util_2eproto.base);
  return *internal_default_instance();
}


void ProgramGraphOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ir_path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&strict_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&opt_level_) -
      reinterpret_cast<char*>(&strict_)) + sizeof(opt_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool instructions_only = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          instructions_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool ignore_call_returns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ignore_call_returns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool strict = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          strict_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 opt_level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          opt_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ir_path = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_ir_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.ProgramGraphOptions.ir_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProgramGraphOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool instructions_only = 1;
  if (this->instructions_only() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_instructions_only(), target);
  }

  // bool ignore_call_returns = 2;
  if (this->ignore_call_returns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_ignore_call_returns(), target);
  }

  // bool strict = 3;
  if (this->strict() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_strict(), target);
  }

  // int32 opt_level = 4;
  if (this->opt_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_opt_level(), target);
  }

  // string ir_path = 10;
  if (this->ir_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ir_path().data(), static_cast<int>(this->_internal_ir_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.ProgramGraphOptions.ir_path");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_ir_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphOptions)
  return target;
}

size_t ProgramGraphOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ir_path = 10;
  if (this->ir_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ir_path());
  }

  // bool strict = 3;
  if (this->strict() != 0) {
    total_size += 1 + 1;
  }

  // bool instructions_only = 1;
  if (this->instructions_only() != 0) {
    total_size += 1 + 1;
  }

  // bool ignore_call_returns = 2;
  if (this->ignore_call_returns() != 0) {
    total_size += 1 + 1;
  }

  // int32 opt_level = 4;
  if (this->opt_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_opt_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramGraphOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ProgramGraphOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramGraphOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProgramGraphOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ProgramGraphOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ProgramGraphOptions)
    MergeFrom(*source);
  }
}

void ProgramGraphOptions::MergeFrom(const ProgramGraphOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ir_path().size() > 0) {
    _internal_set_ir_path(from._internal_ir_path());
  }
  if (from.strict() != 0) {
    _internal_set_strict(from._internal_strict());
  }
  if (from.instructions_only() != 0) {
    _internal_set_instructions_only(from._internal_instructions_only());
  }
  if (from.ignore_call_returns() != 0) {
    _internal_set_ignore_call_returns(from._internal_ignore_call_returns());
  }
  if (from.opt_level() != 0) {
    _internal_set_opt_level(from._internal_opt_level());
  }
}

void ProgramGraphOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ProgramGraphOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramGraphOptions::CopyFrom(const ProgramGraphOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphOptions::IsInitialized() const {
  return true;
}

void ProgramGraphOptions::InternalSwap(ProgramGraphOptions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ir_path_.Swap(&other->ir_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgramGraphOptions, opt_level_)
      + sizeof(ProgramGraphOptions::opt_level_)
      - PROTOBUF_FIELD_OFFSET(ProgramGraphOptions, strict_)>(
          reinterpret_cast<char*>(&strict_),
          reinterpret_cast<char*>(&other->strict_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphOptions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProgramGraphFeatures::InitAsDefaultInstance() {
  ::programl::_ProgramGraphFeatures_default_instance_._instance.get_mutable()->node_features_ = const_cast< ::programl::FeatureLists*>(
      ::programl::FeatureLists::internal_default_instance());
  ::programl::_ProgramGraphFeatures_default_instance_._instance.get_mutable()->edge_features_ = const_cast< ::programl::FeatureLists*>(
      ::programl::FeatureLists::internal_default_instance());
  ::programl::_ProgramGraphFeatures_default_instance_._instance.get_mutable()->function_features_ = const_cast< ::programl::FeatureLists*>(
      ::programl::FeatureLists::internal_default_instance());
  ::programl::_ProgramGraphFeatures_default_instance_._instance.get_mutable()->module_features_ = const_cast< ::programl::FeatureLists*>(
      ::programl::FeatureLists::internal_default_instance());
  ::programl::_ProgramGraphFeatures_default_instance_._instance.get_mutable()->features_ = const_cast< ::programl::Features*>(
      ::programl::Features::internal_default_instance());
}
class ProgramGraphFeatures::_Internal {
 public:
  static const ::programl::FeatureLists& node_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& edge_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& function_features(const ProgramGraphFeatures* msg);
  static const ::programl::FeatureLists& module_features(const ProgramGraphFeatures* msg);
  static const ::programl::Features& features(const ProgramGraphFeatures* msg);
};

const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::node_features(const ProgramGraphFeatures* msg) {
  return *msg->node_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::edge_features(const ProgramGraphFeatures* msg) {
  return *msg->edge_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::function_features(const ProgramGraphFeatures* msg) {
  return *msg->function_features_;
}
const ::programl::FeatureLists&
ProgramGraphFeatures::_Internal::module_features(const ProgramGraphFeatures* msg) {
  return *msg->module_features_;
}
const ::programl::Features&
ProgramGraphFeatures::_Internal::features(const ProgramGraphFeatures* msg) {
  return *msg->features_;
}
void ProgramGraphFeatures::clear_node_features() {
  if (GetArena() == nullptr && node_features_ != nullptr) {
    delete node_features_;
  }
  node_features_ = nullptr;
}
void ProgramGraphFeatures::clear_edge_features() {
  if (GetArena() == nullptr && edge_features_ != nullptr) {
    delete edge_features_;
  }
  edge_features_ = nullptr;
}
void ProgramGraphFeatures::clear_function_features() {
  if (GetArena() == nullptr && function_features_ != nullptr) {
    delete function_features_;
  }
  function_features_ = nullptr;
}
void ProgramGraphFeatures::clear_module_features() {
  if (GetArena() == nullptr && module_features_ != nullptr) {
    delete module_features_;
  }
  module_features_ = nullptr;
}
void ProgramGraphFeatures::clear_features() {
  if (GetArena() == nullptr && features_ != nullptr) {
    delete features_;
  }
  features_ = nullptr;
}
ProgramGraphFeatures::ProgramGraphFeatures(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphFeatures)
}
ProgramGraphFeatures::ProgramGraphFeatures(const ProgramGraphFeatures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_node_features()) {
    node_features_ = new ::programl::FeatureLists(*from.node_features_);
  } else {
    node_features_ = nullptr;
  }
  if (from._internal_has_edge_features()) {
    edge_features_ = new ::programl::FeatureLists(*from.edge_features_);
  } else {
    edge_features_ = nullptr;
  }
  if (from._internal_has_function_features()) {
    function_features_ = new ::programl::FeatureLists(*from.function_features_);
  } else {
    function_features_ = nullptr;
  }
  if (from._internal_has_module_features()) {
    module_features_ = new ::programl::FeatureLists(*from.module_features_);
  } else {
    module_features_ = nullptr;
  }
  if (from._internal_has_features()) {
    features_ = new ::programl::Features(*from.features_);
  } else {
    features_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphFeatures)
}

void ProgramGraphFeatures::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProgramGraphFeatures_util_2eproto.base);
  ::memset(&node_features_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&features_) -
      reinterpret_cast<char*>(&node_features_)) + sizeof(features_));
}

ProgramGraphFeatures::~ProgramGraphFeatures() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphFeatures)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProgramGraphFeatures::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete node_features_;
  if (this != internal_default_instance()) delete edge_features_;
  if (this != internal_default_instance()) delete function_features_;
  if (this != internal_default_instance()) delete module_features_;
  if (this != internal_default_instance()) delete features_;
}

void ProgramGraphFeatures::ArenaDtor(void* object) {
  ProgramGraphFeatures* _this = reinterpret_cast< ProgramGraphFeatures* >(object);
  (void)_this;
}
void ProgramGraphFeatures::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProgramGraphFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProgramGraphFeatures& ProgramGraphFeatures::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProgramGraphFeatures_util_2eproto.base);
  return *internal_default_instance();
}


void ProgramGraphFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphFeatures)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && node_features_ != nullptr) {
    delete node_features_;
  }
  node_features_ = nullptr;
  if (GetArena() == nullptr && edge_features_ != nullptr) {
    delete edge_features_;
  }
  edge_features_ = nullptr;
  if (GetArena() == nullptr && function_features_ != nullptr) {
    delete function_features_;
  }
  function_features_ = nullptr;
  if (GetArena() == nullptr && module_features_ != nullptr) {
    delete module_features_;
  }
  module_features_ = nullptr;
  if (GetArena() == nullptr && features_ != nullptr) {
    delete features_;
  }
  features_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphFeatures::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .programl.FeatureLists node_features = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_node_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.FeatureLists edge_features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_edge_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.FeatureLists function_features = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_function_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.FeatureLists module_features = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_module_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.Features features = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_features(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProgramGraphFeatures::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphFeatures)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.FeatureLists node_features = 1;
  if (this->has_node_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::node_features(this), target, stream);
  }

  // .programl.FeatureLists edge_features = 2;
  if (this->has_edge_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::edge_features(this), target, stream);
  }

  // .programl.FeatureLists function_features = 3;
  if (this->has_function_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::function_features(this), target, stream);
  }

  // .programl.FeatureLists module_features = 4;
  if (this->has_module_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::module_features(this), target, stream);
  }

  // .programl.Features features = 5;
  if (this->has_features()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::features(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphFeatures)
  return target;
}

size_t ProgramGraphFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphFeatures)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .programl.FeatureLists node_features = 1;
  if (this->has_node_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *node_features_);
  }

  // .programl.FeatureLists edge_features = 2;
  if (this->has_edge_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *edge_features_);
  }

  // .programl.FeatureLists function_features = 3;
  if (this->has_function_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *function_features_);
  }

  // .programl.FeatureLists module_features = 4;
  if (this->has_module_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *module_features_);
  }

  // .programl.Features features = 5;
  if (this->has_features()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *features_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramGraphFeatures::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ProgramGraphFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramGraphFeatures* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProgramGraphFeatures>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ProgramGraphFeatures)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ProgramGraphFeatures)
    MergeFrom(*source);
  }
}

void ProgramGraphFeatures::MergeFrom(const ProgramGraphFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node_features()) {
    _internal_mutable_node_features()->::programl::FeatureLists::MergeFrom(from._internal_node_features());
  }
  if (from.has_edge_features()) {
    _internal_mutable_edge_features()->::programl::FeatureLists::MergeFrom(from._internal_edge_features());
  }
  if (from.has_function_features()) {
    _internal_mutable_function_features()->::programl::FeatureLists::MergeFrom(from._internal_function_features());
  }
  if (from.has_module_features()) {
    _internal_mutable_module_features()->::programl::FeatureLists::MergeFrom(from._internal_module_features());
  }
  if (from.has_features()) {
    _internal_mutable_features()->::programl::Features::MergeFrom(from._internal_features());
  }
}

void ProgramGraphFeatures::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ProgramGraphFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramGraphFeatures::CopyFrom(const ProgramGraphFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphFeatures::IsInitialized() const {
  return true;
}

void ProgramGraphFeatures::InternalSwap(ProgramGraphFeatures* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProgramGraphFeatures, features_)
      + sizeof(ProgramGraphFeatures::features_)
      - PROTOBUF_FIELD_OFFSET(ProgramGraphFeatures, node_features_)>(
          reinterpret_cast<char*>(&node_features_),
          reinterpret_cast<char*>(&other->node_features_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphFeatures::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProgramGraphFeaturesList::InitAsDefaultInstance() {
  ::programl::_ProgramGraphFeaturesList_default_instance_._instance.get_mutable()->context_ = const_cast< ::programl::Features*>(
      ::programl::Features::internal_default_instance());
}
class ProgramGraphFeaturesList::_Internal {
 public:
  static const ::programl::Features& context(const ProgramGraphFeaturesList* msg);
};

const ::programl::Features&
ProgramGraphFeaturesList::_Internal::context(const ProgramGraphFeaturesList* msg) {
  return *msg->context_;
}
void ProgramGraphFeaturesList::clear_context() {
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
}
ProgramGraphFeaturesList::ProgramGraphFeaturesList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  graph_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ProgramGraphFeaturesList)
}
ProgramGraphFeaturesList::ProgramGraphFeaturesList(const ProgramGraphFeaturesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      graph_(from.graph_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_context()) {
    context_ = new ::programl::Features(*from.context_);
  } else {
    context_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:programl.ProgramGraphFeaturesList)
}

void ProgramGraphFeaturesList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProgramGraphFeaturesList_util_2eproto.base);
  context_ = nullptr;
}

ProgramGraphFeaturesList::~ProgramGraphFeaturesList() {
  // @@protoc_insertion_point(destructor:programl.ProgramGraphFeaturesList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProgramGraphFeaturesList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete context_;
}

void ProgramGraphFeaturesList::ArenaDtor(void* object) {
  ProgramGraphFeaturesList* _this = reinterpret_cast< ProgramGraphFeaturesList* >(object);
  (void)_this;
}
void ProgramGraphFeaturesList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProgramGraphFeaturesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProgramGraphFeaturesList& ProgramGraphFeaturesList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProgramGraphFeaturesList_util_2eproto.base);
  return *internal_default_instance();
}


void ProgramGraphFeaturesList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ProgramGraphFeaturesList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  graph_.Clear();
  if (GetArena() == nullptr && context_ != nullptr) {
    delete context_;
  }
  context_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProgramGraphFeaturesList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .programl.Features context = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_context(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .programl.ProgramGraphFeatures graph = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_graph(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProgramGraphFeaturesList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ProgramGraphFeaturesList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Features context = 1;
  if (this->has_context()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::context(this), target, stream);
  }

  // repeated .programl.ProgramGraphFeatures graph = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_graph_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_graph(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ProgramGraphFeaturesList)
  return target;
}

size_t ProgramGraphFeaturesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ProgramGraphFeaturesList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.ProgramGraphFeatures graph = 2;
  total_size += 1UL * this->_internal_graph_size();
  for (const auto& msg : this->graph_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .programl.Features context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *context_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProgramGraphFeaturesList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ProgramGraphFeaturesList)
  GOOGLE_DCHECK_NE(&from, this);
  const ProgramGraphFeaturesList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProgramGraphFeaturesList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ProgramGraphFeaturesList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ProgramGraphFeaturesList)
    MergeFrom(*source);
  }
}

void ProgramGraphFeaturesList::MergeFrom(const ProgramGraphFeaturesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ProgramGraphFeaturesList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  graph_.MergeFrom(from.graph_);
  if (from.has_context()) {
    _internal_mutable_context()->::programl::Features::MergeFrom(from._internal_context());
  }
}

void ProgramGraphFeaturesList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ProgramGraphFeaturesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramGraphFeaturesList::CopyFrom(const ProgramGraphFeaturesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ProgramGraphFeaturesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramGraphFeaturesList::IsInitialized() const {
  return true;
}

void ProgramGraphFeaturesList::InternalSwap(ProgramGraphFeaturesList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  graph_.InternalSwap(&other->graph_);
  swap(context_, other->context_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProgramGraphFeaturesList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ir::InitAsDefaultInstance() {
}
class Ir::_Internal {
 public:
};

Ir::Ir(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.Ir)
}
Ir::Ir(const Ir& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cmd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cmd().empty()) {
    cmd_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cmd(),
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  ::memcpy(&compiler_version_, &from.compiler_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&compiler_version_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:programl.Ir)
}

void Ir::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Ir_util_2eproto.base);
  cmd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&compiler_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&compiler_version_)) + sizeof(type_));
}

Ir::~Ir() {
  // @@protoc_insertion_point(destructor:programl.Ir)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Ir::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cmd_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Ir::ArenaDtor(void* object) {
  Ir* _this = reinterpret_cast< Ir* >(object);
  (void)_this;
}
void Ir::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Ir::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ir& Ir::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ir_util_2eproto.base);
  return *internal_default_instance();
}


void Ir::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.Ir)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cmd_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&compiler_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&compiler_version_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Ir::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .programl.Ir.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::programl::Ir_Type>(val));
        } else goto handle_unusual;
        continue;
      // int64 compiler_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          compiler_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cmd = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cmd();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.Ir.cmd"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.Ir.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ir::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.Ir)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .programl.Ir.Type type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // int64 compiler_version = 2;
  if (this->compiler_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_compiler_version(), target);
  }

  // string cmd = 3;
  if (this->cmd().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cmd().data(), static_cast<int>(this->_internal_cmd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Ir.cmd");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cmd(), target);
  }

  // string text = 4;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Ir.text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.Ir)
  return target;
}

size_t Ir::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.Ir)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cmd = 3;
  if (this->cmd().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cmd());
  }

  // string text = 4;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // int64 compiler_version = 2;
  if (this->compiler_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_compiler_version());
  }

  // .programl.Ir.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ir::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.Ir)
  GOOGLE_DCHECK_NE(&from, this);
  const Ir* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ir>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.Ir)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.Ir)
    MergeFrom(*source);
  }
}

void Ir::MergeFrom(const Ir& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.Ir)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd().size() > 0) {
    _internal_set_cmd(from._internal_cmd());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.compiler_version() != 0) {
    _internal_set_compiler_version(from._internal_compiler_version());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void Ir::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.Ir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ir::CopyFrom(const Ir& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.Ir)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ir::IsInitialized() const {
  return true;
}

void Ir::InternalSwap(Ir* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  cmd_.Swap(&other->cmd_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Ir, type_)
      + sizeof(Ir::type_)
      - PROTOBUF_FIELD_OFFSET(Ir, compiler_version_)>(
          reinterpret_cast<char*>(&compiler_version_),
          reinterpret_cast<char*>(&other->compiler_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Ir::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IrList::InitAsDefaultInstance() {
}
class IrList::_Internal {
 public:
};

IrList::IrList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ir_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.IrList)
}
IrList::IrList(const IrList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ir_(from.ir_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:programl.IrList)
}

void IrList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IrList_util_2eproto.base);
}

IrList::~IrList() {
  // @@protoc_insertion_point(destructor:programl.IrList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IrList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IrList::ArenaDtor(void* object) {
  IrList* _this = reinterpret_cast< IrList* >(object);
  (void)_this;
}
void IrList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IrList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IrList& IrList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IrList_util_2eproto.base);
  return *internal_default_instance();
}


void IrList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.IrList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ir_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IrList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .programl.Ir ir = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ir(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IrList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.IrList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .programl.Ir ir = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ir_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ir(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.IrList)
  return target;
}

size_t IrList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.IrList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.Ir ir = 1;
  total_size += 1UL * this->_internal_ir_size();
  for (const auto& msg : this->ir_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IrList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.IrList)
  GOOGLE_DCHECK_NE(&from, this);
  const IrList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IrList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.IrList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.IrList)
    MergeFrom(*source);
  }
}

void IrList::MergeFrom(const IrList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.IrList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ir_.MergeFrom(from.ir_);
}

void IrList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.IrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IrList::CopyFrom(const IrList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.IrList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IrList::IsInitialized() const {
  return true;
}

void IrList::InternalSwap(IrList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ir_.InternalSwap(&other->ir_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IrList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourceFile::InitAsDefaultInstance() {
}
class SourceFile::_Internal {
 public:
};

SourceFile::SourceFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.SourceFile)
}
SourceFile::SourceFile(const SourceFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  relpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_relpath().empty()) {
    relpath_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_relpath(),
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:programl.SourceFile)
}

void SourceFile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceFile_util_2eproto.base);
  relpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_ = 0;
}

SourceFile::~SourceFile() {
  // @@protoc_insertion_point(destructor:programl.SourceFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SourceFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  relpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceFile::ArenaDtor(void* object) {
  SourceFile* _this = reinterpret_cast< SourceFile* >(object);
  (void)_this;
}
void SourceFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceFile& SourceFile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceFile_util_2eproto.base);
  return *internal_default_instance();
}


void SourceFile::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.SourceFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relpath_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SourceFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string relpath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_relpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.SourceFile.relpath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.SourceFile.Language language = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_language(static_cast<::programl::SourceFile_Language>(val));
        } else goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.SourceFile.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.SourceFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string relpath = 1;
  if (this->relpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_relpath().data(), static_cast<int>(this->_internal_relpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.SourceFile.relpath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_relpath(), target);
  }

  // .programl.SourceFile.Language language = 2;
  if (this->language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_language(), target);
  }

  // string text = 3;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.SourceFile.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.SourceFile)
  return target;
}

size_t SourceFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.SourceFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string relpath = 1;
  if (this->relpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_relpath());
  }

  // string text = 3;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .programl.SourceFile.Language language = 2;
  if (this->language() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_language());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.SourceFile)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.SourceFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.SourceFile)
    MergeFrom(*source);
  }
}

void SourceFile::MergeFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.SourceFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relpath().size() > 0) {
    _internal_set_relpath(from._internal_relpath());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.language() != 0) {
    _internal_set_language(from._internal_language());
  }
}

void SourceFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceFile::CopyFrom(const SourceFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.SourceFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceFile::IsInitialized() const {
  return true;
}

void SourceFile::InternalSwap(SourceFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  relpath_.Swap(&other->relpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Repo::InitAsDefaultInstance() {
}
class Repo::_Internal {
 public:
};

Repo::Repo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.Repo)
}
Repo::Repo(const Repo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sha1().empty()) {
    sha1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sha1(),
      GetArena());
  }
  created_ms_timestamp_ = from.created_ms_timestamp_;
  // @@protoc_insertion_point(copy_constructor:programl.Repo)
}

void Repo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Repo_util_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_ms_timestamp_ = PROTOBUF_LONGLONG(0);
}

Repo::~Repo() {
  // @@protoc_insertion_point(destructor:programl.Repo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Repo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Repo::ArenaDtor(void* object) {
  Repo* _this = reinterpret_cast< Repo* >(object);
  (void)_this;
}
void Repo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Repo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Repo& Repo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Repo_util_2eproto.base);
  return *internal_default_instance();
}


void Repo::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.Repo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  created_ms_timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Repo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.Repo.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string sha1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sha1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.Repo.sha1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 created_ms_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          created_ms_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Repo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.Repo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Repo.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // string sha1 = 2;
  if (this->sha1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sha1().data(), static_cast<int>(this->_internal_sha1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.Repo.sha1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sha1(), target);
  }

  // int64 created_ms_timestamp = 3;
  if (this->created_ms_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_created_ms_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.Repo)
  return target;
}

size_t Repo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.Repo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string sha1 = 2;
  if (this->sha1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sha1());
  }

  // int64 created_ms_timestamp = 3;
  if (this->created_ms_timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_created_ms_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Repo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.Repo)
  GOOGLE_DCHECK_NE(&from, this);
  const Repo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Repo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.Repo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.Repo)
    MergeFrom(*source);
  }
}

void Repo::MergeFrom(const Repo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.Repo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.sha1().size() > 0) {
    _internal_set_sha1(from._internal_sha1());
  }
  if (from.created_ms_timestamp() != 0) {
    _internal_set_created_ms_timestamp(from._internal_created_ms_timestamp());
  }
}

void Repo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.Repo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Repo::CopyFrom(const Repo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.Repo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Repo::IsInitialized() const {
  return true;
}

void Repo::InternalSwap(Repo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha1_.Swap(&other->sha1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(created_ms_timestamp_, other->created_ms_timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Repo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NodeIndexList::InitAsDefaultInstance() {
}
class NodeIndexList::_Internal {
 public:
};

NodeIndexList::NodeIndexList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  node_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.NodeIndexList)
}
NodeIndexList::NodeIndexList(const NodeIndexList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      node_(from.node_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:programl.NodeIndexList)
}

void NodeIndexList::SharedCtor() {
}

NodeIndexList::~NodeIndexList() {
  // @@protoc_insertion_point(destructor:programl.NodeIndexList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NodeIndexList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void NodeIndexList::ArenaDtor(void* object) {
  NodeIndexList* _this = reinterpret_cast< NodeIndexList* >(object);
  (void)_this;
}
void NodeIndexList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NodeIndexList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeIndexList& NodeIndexList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NodeIndexList_util_2eproto.base);
  return *internal_default_instance();
}


void NodeIndexList::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.NodeIndexList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NodeIndexList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 node = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_node(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_node(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeIndexList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.NodeIndexList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 node = 1;
  {
    int byte_size = _node_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_node(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.NodeIndexList)
  return target;
}

size_t NodeIndexList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.NodeIndexList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 node = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->node_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _node_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeIndexList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.NodeIndexList)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeIndexList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeIndexList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.NodeIndexList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.NodeIndexList)
    MergeFrom(*source);
  }
}

void NodeIndexList::MergeFrom(const NodeIndexList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.NodeIndexList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_.MergeFrom(from.node_);
}

void NodeIndexList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.NodeIndexList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeIndexList::CopyFrom(const NodeIndexList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.NodeIndexList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeIndexList::IsInitialized() const {
  return true;
}

void NodeIndexList::InternalSwap(NodeIndexList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  node_.InternalSwap(&other->node_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeIndexList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ResultsEveryIteration::InitAsDefaultInstance() {
  ::programl::_ResultsEveryIteration_default_instance_._instance.get_mutable()->program_points_ = const_cast< ::programl::Int64List*>(
      ::programl::Int64List::internal_default_instance());
  ::programl::_ResultsEveryIteration_default_instance_._instance.get_mutable()->interested_points_ = const_cast< ::programl::Int64List*>(
      ::programl::Int64List::internal_default_instance());
}
class ResultsEveryIteration::_Internal {
 public:
  using HasBits = decltype(std::declval<ResultsEveryIteration>()._has_bits_);
  static const ::programl::Int64List& program_points(const ResultsEveryIteration* msg);
  static void set_has_program_points(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::programl::Int64List& interested_points(const ResultsEveryIteration* msg);
  static void set_has_interested_points(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_task_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::programl::Int64List&
ResultsEveryIteration::_Internal::program_points(const ResultsEveryIteration* msg) {
  return *msg->program_points_;
}
const ::programl::Int64List&
ResultsEveryIteration::_Internal::interested_points(const ResultsEveryIteration* msg) {
  return *msg->interested_points_;
}
void ResultsEveryIteration::clear_program_points() {
  if (GetArena() == nullptr && program_points_ != nullptr) {
    delete program_points_;
  }
  program_points_ = nullptr;
  _has_bits_[0] &= ~0x00000002u;
}
void ResultsEveryIteration::clear_interested_points() {
  if (GetArena() == nullptr && interested_points_ != nullptr) {
    delete interested_points_;
  }
  interested_points_ = nullptr;
  _has_bits_[0] &= ~0x00000004u;
}
ResultsEveryIteration::ResultsEveryIteration(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_every_iteration_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ResultsEveryIteration)
}
ResultsEveryIteration::ResultsEveryIteration(const ResultsEveryIteration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      results_every_iteration_(from.results_every_iteration_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  task_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_task_name()) {
    task_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_task_name(),
      GetArena());
  }
  if (from._internal_has_program_points()) {
    program_points_ = new ::programl::Int64List(*from.program_points_);
  } else {
    program_points_ = nullptr;
  }
  if (from._internal_has_interested_points()) {
    interested_points_ = new ::programl::Int64List(*from.interested_points_);
  } else {
    interested_points_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:programl.ResultsEveryIteration)
}

void ResultsEveryIteration::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultsEveryIteration_util_2eproto.base);
  task_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&program_points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interested_points_) -
      reinterpret_cast<char*>(&program_points_)) + sizeof(interested_points_));
}

ResultsEveryIteration::~ResultsEveryIteration() {
  // @@protoc_insertion_point(destructor:programl.ResultsEveryIteration)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultsEveryIteration::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  task_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete program_points_;
  if (this != internal_default_instance()) delete interested_points_;
}

void ResultsEveryIteration::ArenaDtor(void* object) {
  ResultsEveryIteration* _this = reinterpret_cast< ResultsEveryIteration* >(object);
  (void)_this;
}
void ResultsEveryIteration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultsEveryIteration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultsEveryIteration& ResultsEveryIteration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultsEveryIteration_util_2eproto.base);
  return *internal_default_instance();
}


void ResultsEveryIteration::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ResultsEveryIteration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_every_iteration_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      task_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      if (GetArena() == nullptr && program_points_ != nullptr) {
        delete program_points_;
      }
      program_points_ = nullptr;
    }
    if (cached_has_bits & 0x00000004u) {
      if (GetArena() == nullptr && interested_points_ != nullptr) {
        delete interested_points_;
      }
      interested_points_ = nullptr;
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultsEveryIteration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .programl.ResultOneIteration results_every_iteration = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results_every_iteration(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .programl.Int64List program_points = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_program_points(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .programl.Int64List interested_points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_interested_points(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string task_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_task_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "programl.ResultsEveryIteration.task_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultsEveryIteration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ResultsEveryIteration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .programl.ResultOneIteration results_every_iteration = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_every_iteration_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_results_every_iteration(i), target, stream);
  }

  // .programl.Int64List program_points = 2;
  if (_internal_has_program_points()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::program_points(this), target, stream);
  }

  // .programl.Int64List interested_points = 3;
  if (_internal_has_interested_points()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::interested_points(this), target, stream);
  }

  // string task_name = 4;
  if (_internal_has_task_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_task_name().data(), static_cast<int>(this->_internal_task_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "programl.ResultsEveryIteration.task_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_task_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ResultsEveryIteration)
  return target;
}

size_t ResultsEveryIteration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ResultsEveryIteration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .programl.ResultOneIteration results_every_iteration = 1;
  total_size += 1UL * this->_internal_results_every_iteration_size();
  for (const auto& msg : this->results_every_iteration_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // string task_name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_task_name());
    }

    // .programl.Int64List program_points = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *program_points_);
    }

    // .programl.Int64List interested_points = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *interested_points_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultsEveryIteration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ResultsEveryIteration)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultsEveryIteration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultsEveryIteration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ResultsEveryIteration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ResultsEveryIteration)
    MergeFrom(*source);
  }
}

void ResultsEveryIteration::MergeFrom(const ResultsEveryIteration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ResultsEveryIteration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_every_iteration_.MergeFrom(from.results_every_iteration_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_task_name(from._internal_task_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_program_points()->::programl::Int64List::MergeFrom(from._internal_program_points());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_interested_points()->::programl::Int64List::MergeFrom(from._internal_interested_points());
    }
  }
}

void ResultsEveryIteration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ResultsEveryIteration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultsEveryIteration::CopyFrom(const ResultsEveryIteration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ResultsEveryIteration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultsEveryIteration::IsInitialized() const {
  return true;
}

void ResultsEveryIteration::InternalSwap(ResultsEveryIteration* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  results_every_iteration_.InternalSwap(&other->results_every_iteration_);
  task_name_.Swap(&other->task_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultsEveryIteration, interested_points_)
      + sizeof(ResultsEveryIteration::interested_points_)
      - PROTOBUF_FIELD_OFFSET(ResultsEveryIteration, program_points_)>(
          reinterpret_cast<char*>(&program_points_),
          reinterpret_cast<char*>(&other->program_points_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultsEveryIteration::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ResultOneIteration_ResultMapEntry_DoNotUse::ResultOneIteration_ResultMapEntry_DoNotUse() {}
ResultOneIteration_ResultMapEntry_DoNotUse::ResultOneIteration_ResultMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ResultOneIteration_ResultMapEntry_DoNotUse::MergeFrom(const ResultOneIteration_ResultMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ResultOneIteration_ResultMapEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ResultOneIteration_ResultMapEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ResultOneIteration::InitAsDefaultInstance() {
}
class ResultOneIteration::_Internal {
 public:
};

void ResultOneIteration::clear_result_map() {
  result_map_.Clear();
}
ResultOneIteration::ResultOneIteration(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  result_map_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:programl.ResultOneIteration)
}
ResultOneIteration::ResultOneIteration(const ResultOneIteration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_map_.MergeFrom(from.result_map_);
  // @@protoc_insertion_point(copy_constructor:programl.ResultOneIteration)
}

void ResultOneIteration::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResultOneIteration_util_2eproto.base);
}

ResultOneIteration::~ResultOneIteration() {
  // @@protoc_insertion_point(destructor:programl.ResultOneIteration)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResultOneIteration::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResultOneIteration::ArenaDtor(void* object) {
  ResultOneIteration* _this = reinterpret_cast< ResultOneIteration* >(object);
  (void)_this;
}
void ResultOneIteration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResultOneIteration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResultOneIteration& ResultOneIteration::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResultOneIteration_util_2eproto.base);
  return *internal_default_instance();
}


void ResultOneIteration::Clear() {
// @@protoc_insertion_point(message_clear_start:programl.ResultOneIteration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultOneIteration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int64, .programl.Int64List> result_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&result_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResultOneIteration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:programl.ResultOneIteration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .programl.Int64List> result_map = 1;
  if (!this->_internal_result_map().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::programl::Int64List >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_result_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_result_map().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::programl::Int64List >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::programl::Int64List >::const_iterator
          it = this->_internal_result_map().begin();
          it != this->_internal_result_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ResultOneIteration_ResultMapEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::programl::Int64List >::const_iterator
          it = this->_internal_result_map().begin();
          it != this->_internal_result_map().end(); ++it) {
        target = ResultOneIteration_ResultMapEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:programl.ResultOneIteration)
  return target;
}

size_t ResultOneIteration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:programl.ResultOneIteration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .programl.Int64List> result_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_result_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::programl::Int64List >::const_iterator
      it = this->_internal_result_map().begin();
      it != this->_internal_result_map().end(); ++it) {
    total_size += ResultOneIteration_ResultMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResultOneIteration::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:programl.ResultOneIteration)
  GOOGLE_DCHECK_NE(&from, this);
  const ResultOneIteration* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResultOneIteration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:programl.ResultOneIteration)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:programl.ResultOneIteration)
    MergeFrom(*source);
  }
}

void ResultOneIteration::MergeFrom(const ResultOneIteration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:programl.ResultOneIteration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_map_.MergeFrom(from.result_map_);
}

void ResultOneIteration::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:programl.ResultOneIteration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultOneIteration::CopyFrom(const ResultOneIteration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:programl.ResultOneIteration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultOneIteration::IsInitialized() const {
  return true;
}

void ResultOneIteration::InternalSwap(ResultOneIteration* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_map_.Swap(&other->result_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultOneIteration::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace programl
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphList* Arena::CreateMaybeMessage< ::programl::ProgramGraphList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphOptions* Arena::CreateMaybeMessage< ::programl::ProgramGraphOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphOptions >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphFeatures* Arena::CreateMaybeMessage< ::programl::ProgramGraphFeatures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ProgramGraphFeaturesList* Arena::CreateMaybeMessage< ::programl::ProgramGraphFeaturesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ProgramGraphFeaturesList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::Ir* Arena::CreateMaybeMessage< ::programl::Ir >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::Ir >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::IrList* Arena::CreateMaybeMessage< ::programl::IrList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::IrList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::SourceFile* Arena::CreateMaybeMessage< ::programl::SourceFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::SourceFile >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::Repo* Arena::CreateMaybeMessage< ::programl::Repo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::Repo >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::NodeIndexList* Arena::CreateMaybeMessage< ::programl::NodeIndexList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::NodeIndexList >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ResultsEveryIteration* Arena::CreateMaybeMessage< ::programl::ResultsEveryIteration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ResultsEveryIteration >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ResultOneIteration_ResultMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::programl::ResultOneIteration_ResultMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ResultOneIteration_ResultMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::programl::ResultOneIteration* Arena::CreateMaybeMessage< ::programl::ResultOneIteration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::programl::ResultOneIteration >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
